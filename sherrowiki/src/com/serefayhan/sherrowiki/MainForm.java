package com.serefayhan.sherrowiki;

import java.awt.Color;
import java.io.File;
import java.sql.Connection;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIDefaults;
import javax.swing.UIManager;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultTreeSelectionModel;
import javax.swing.tree.TreeSelectionModel;
/**
 *
 * @author Seref AYHAN <ben@serefayhan.com>
 */
public class MainForm extends javax.swing.JFrame {
    
    /*
    database connection
    */
    protected static Connection dbConnection;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        tBtnAdd = new javax.swing.JButton();
        tBtnSave = new javax.swing.JButton();
        tBtnDelete = new javax.swing.JButton();
        tBtnExport = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        wikiTree = new javax.swing.JTree();
        jScrollPane3 = new javax.swing.JScrollPane();
        wikiEditor = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SherroWiki");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        tBtnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/serefayhan/sherrowiki/img/add.png"))); // NOI18N
        tBtnAdd.setText("Add");
        tBtnAdd.setFocusable(false);
        tBtnAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tBtnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tBtnAddMouseClicked(evt);
            }
        });
        jToolBar1.add(tBtnAdd);

        tBtnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/serefayhan/sherrowiki/img/save.png"))); // NOI18N
        tBtnSave.setText("Save");
        tBtnSave.setEnabled(false);
        tBtnSave.setFocusable(false);
        tBtnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tBtnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tBtnSaveMouseClicked(evt);
            }
        });
        jToolBar1.add(tBtnSave);

        tBtnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/serefayhan/sherrowiki/img/delete.png"))); // NOI18N
        tBtnDelete.setText("Delete");
        tBtnDelete.setFocusable(false);
        tBtnDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tBtnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tBtnDeleteMouseClicked(evt);
            }
        });
        jToolBar1.add(tBtnDelete);

        tBtnExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/serefayhan/sherrowiki/img/xhtml.png"))); // NOI18N
        tBtnExport.setText("Export");
        tBtnExport.setFocusable(false);
        tBtnExport.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tBtnExport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tBtnExportMouseClicked(evt);
            }
        });
        jToolBar1.add(tBtnExport);

        wikiTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wikiTreeMouseClicked(evt);
            }
        });
        wikiTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                wikiTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(wikiTree);

        jSplitPane1.setLeftComponent(jScrollPane1);

        wikiEditor.setEditable(false);
        wikiEditor.setContentType("text/html"); // NOI18N
        wikiEditor.setText("");
        jScrollPane3.setViewportView(wikiEditor);

        jSplitPane1.setRightComponent(jScrollPane3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        TreeSelectionModel selmod = new DefaultTreeSelectionModel();
        selmod.setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        wikiTree.setSelectionModel(selmod);
        
        SherroWikiModel wikiModel = new SherroWikiModel(new SherroWikiNode("Wiki"));
        wikiTree.setModel(wikiModel);
        
        new SherroWikiBusiness().initDatabase().refreshWikiTree(wikiModel);
    }//GEN-LAST:event_formWindowOpened

    private void wikiTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wikiTreeMouseClicked

        if(wikiTree.getSelectionCount() == 0){
            return;
        }
        
        SherroWikiNode selected = (SherroWikiNode)wikiTree.getSelectionPath().getLastPathComponent();
        
        if(selected != null && selected.getNodeID() > 0)
        {
            if(evt.getClickCount()==1){
                //single click
                //preview selected wiki
                wikiEditor.setEditable(false);
                tBtnSave.setEnabled(false);
                wikiEditor.setContentType("text/html");
                setEditorColor(Color.white);
                wikiEditor.setText(new SherroWikiBusiness().renderWikiPage(selected.getNodeID()));
                
            }
            if(evt.getClickCount()==2){
                //double click
                //edit selected wiki
                wikiEditor.setEditable(true);
                tBtnSave.setEnabled(true);
                wikiEditor.setContentType("text/plain");
                setEditorColor(new Color(242,242,189));
                wikiEditor.setText(new SherroWikiBusiness().getWikiSource(selected.getNodeID()));
            }
        }else{
            wikiEditor.setContentType("text/html");
            wikiEditor.setText("");
        }
    }//GEN-LAST:event_wikiTreeMouseClicked

    private void tBtnAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tBtnAddMouseClicked
        /*
        TODO 
        ask for wiki name
        save to db with empty context
        refresh wiki tree
        open in edit mode
        */
        String wikiName = JOptionPane.showInputDialog(null, "Type a name for newly creating wiki page:", "", 1);
        if(wikiName != null){
            new SherroWikiBusiness().createBlankWikiPage(wikiName).refreshWikiTree((SherroWikiModel)wikiTree.getModel());
        }
    }//GEN-LAST:event_tBtnAddMouseClicked

    private void tBtnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tBtnDeleteMouseClicked
        
        if(wikiTree.getSelectionCount() == 0){
            return;
        }
        
        SherroWikiNode selected = (SherroWikiNode)wikiTree.getSelectionPath().getLastPathComponent();
        if(selected.getNodeID() > 0){
            int response = JOptionPane.showConfirmDialog(
                null, 
                "Delete \""+selected.toString()+"\"\r\nAre you sure?",
                "Confirm Delete",
                JOptionPane.YES_NO_OPTION
            );
            if(response == JOptionPane.YES_OPTION){
                new SherroWikiBusiness().deleteWikiPage(selected.getNodeID()).refreshWikiTree((SherroWikiModel)wikiTree.getModel());
            }
        }
    }//GEN-LAST:event_tBtnDeleteMouseClicked

    private void tBtnExportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tBtnExportMouseClicked
        /*
        TODO
        be sure a node selected in wiki
        ask user to where to save .html file
        */
        if(wikiTree.getSelectionCount() == 0){
            return;
        }
        
        SherroWikiNode selected = (SherroWikiNode)wikiTree.getSelectionPath().getLastPathComponent();
        
        if(selected == null || selected.getNodeID() == 0){
            return;
        }
        
        JFileChooser saveDialog = new JFileChooser();
        saveDialog.setDialogTitle("Save wiki file to:");
        saveDialog.setDialogType(JFileChooser.SAVE_DIALOG);
        saveDialog.setSelectedFile(new File(selected.toString()+".html"));
        saveDialog.setFileFilter(new FileNameExtensionFilter("HTML Files",".html"));
        
        if(saveDialog.showSaveDialog(this) == JFileChooser.APPROVE_OPTION){
            if(!new SherroWikiBusiness().exportWikiPage(selected.getNodeID(), saveDialog.getSelectedFile().toString())){
                JOptionPane.showMessageDialog(this, "Unable to save wiki!");
            }
        }
    }//GEN-LAST:event_tBtnExportMouseClicked

    private void wikiTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_wikiTreeValueChanged
        
        if((evt.getNewLeadSelectionPath() == null) || (evt.getOldLeadSelectionPath() == null)){
            return;
        }
        
        SherroWikiNode newNode = (SherroWikiNode)evt.getNewLeadSelectionPath().getLastPathComponent();
        SherroWikiNode oldNode = (SherroWikiNode)evt.getOldLeadSelectionPath().getLastPathComponent();
        
        if((newNode.getNodeID() != oldNode.getNodeID()) && wikiEditor.isEditable()){
            new SherroWikiBusiness().setWikiSource(oldNode.getNodeID(), wikiEditor.getText());
        }
    }//GEN-LAST:event_wikiTreeValueChanged

    private void tBtnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tBtnSaveMouseClicked
        
        if(wikiTree.getSelectionCount() == 0){
            return;
        }
        
        SherroWikiNode selected = (SherroWikiNode)wikiTree.getSelectionPath().getLastPathComponent();
        if(selected.getNodeID() > 0){
            new SherroWikiBusiness().setWikiSource(selected.getNodeID(), wikiEditor.getText());
        }
    }//GEN-LAST:event_tBtnSaveMouseClicked

    
    private void setEditorColor(Color _color){
        
        UIDefaults defaults = UIManager.getLookAndFeelDefaults();
        defaults.put("EditorPane[Enabled].backgroundPainter", _color);
        
        wikiEditor.putClientProperty("Nimbus.Overrides", defaults);
        wikiEditor.putClientProperty("Nimbus.Overrides.InheritDefaults", true);
        
        wikiEditor.setBackground(_color);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                initialize();
            }
        });
        
    }
    
    public static void initialize(){
        
        try{
            dbConnection = new SherroWikiDB().connectDB();
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex.toString());
            System.exit(9);
        }
        
        new MainForm().setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton tBtnAdd;
    private javax.swing.JButton tBtnDelete;
    private javax.swing.JButton tBtnExport;
    private javax.swing.JButton tBtnSave;
    private javax.swing.JEditorPane wikiEditor;
    private javax.swing.JTree wikiTree;
    // End of variables declaration//GEN-END:variables
}
